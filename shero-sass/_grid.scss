@use 'sass:math';

$grid-columns: 12;
$grid-gaps: (
    '0': 0,
    '1': 10px,
    '2': 20px,
    '3': 30px,
    '4': 40px,
    '5': 50px,
);


// Layout Values 
$layout-values: flex-start, flex-end, center, space-between, space-around;

// Base Layout Classes
.container {
    width: 100%;
    margin: 0 auto;
    max-width: 1200px;
    padding: 0 20px;
    box-sizing: border-box;
}

.row {
    display: flex;
    flex-flow: row wrap;
}


// Grid Gaps
@each $key, $val in $grid-gaps {
    .gap-#{$key} > * {
        padding: $val;
    }

    .gap-#{$key} {
        margin-left: -$val;
        margin-right: -$val;
    }
}



// Justify Content
@each $val in $layout-values {
    .justify-#{$val} {
        justify-content: #{$val};
    }
}


// col Classes

// Extra Small
@include xs {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-xs {
            flex-grow: 0;
            box-sizing: border-box;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

// Small
@include sm {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-sm {
            flex-grow: 0;
            box-sizing: border-box;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}


// Medium
@include md {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-md {
            flex-grow: 0;
            box-sizing: border-box;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}


// Large
@include lg {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-lg {
            flex-grow: 0;
            box-sizing: border-box;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}


// Extra Large
@include xl {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-xl {
            flex-grow: 0;
            box-sizing: border-box;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

